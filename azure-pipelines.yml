# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: azure-sql-iot-release

stages:
- stage: Deploy
  displayName: Deploy ARM template
  jobs:
  - job: DeployArmTemplate
    displayName: Deploy ARM Template
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '$(azRMConnection)'
        subscriptionId: '$(subscriptionId)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroupName)'
        location: 'East US 2'
        templateLocation: 'URL of the file'
        csmFileLink: 'https://raw.githubusercontent.com/YRollHid/azure-sql-iot/main/azure_deployment/template.json'
        overrideParameters: '-iothub_name "$(iotHub)" -server_sql_name "$(serverName)" -server_admin_name "$(adminSqlLogin)" -server_admin_password "$(password)" -site_iot_name "$(iotSite)" -serverfarm_iot_name "$(iotServerFarm)" -virtualmachine_devicesimulator_name "$(iotSimulator)" -logworkspace_name "$(logWorkspace)" -storageaccount_iothub_name "$(iotStorageAccount)" -storageaccount_iothub_container "$(storageContainer)" -networkinterface_devicesimulator_name "$(networkInterface)" -virtualnetwork_iot_name "$(vNet)" -ip_address_name "$(ipAddressName)" -ssh_public_key "$(sshPublicKey)"'
        deploymentMode: 'Incremental'
        deploymentName: 'DeployPipelineTemplate'

- stage: SetAzureFirewallRule
  displayName: Set Azure Firewall Rules
  jobs:
  - job: SetAzureFirewallRule
    displayName: Set Azure Firewall Rules
    steps:
    - task: AzurePowerShell@5
      displayName: SetAzureFirewallRule
      inputs:
        azureSubscription: '$(azRMConnection)'
        ScriptType: 'FilePath'
        ScriptPath: 'scripts/SetAzureFirewallRule.ps1'
        ScriptArguments: '$(serverName) $(resourceGroupName) $(ipAddress)'
        azurePowerShellVersion: 'LatestVersion'

- stage: DeploySchemaDB
  displayName: Deploy the database schema using SQLCMD
  jobs:
  - job: DeploySchemaDB
    displayName: Deploy the db schema using SQLCMD
    steps:
    - task: SqlDacpacDeploymentOnMachineGroup@0
      inputs:
        TaskType: 'sqlQuery'
        SqlFile: 'sql_schema/script.sql'
        ServerName: '$(serverName).database.windows.net'
        DatabaseName: 'iot-db'
        AuthScheme: 'sqlServerAuthentication'
        SqlUsername: '$(adminSqlLogin)'
        SqlPassword: '$(password)'